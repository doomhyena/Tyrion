import nextcord
from nextcord import Interaction, SlashOption
import random
from datetime import datetime
from nextcord.ext import commands, application_checks

intents = nextcord.Intents().all()

bot = commands.Bot(command_prefix = ".ds ", help_command = None, intents = intents)

class CommandHandler(commands.Cog):
    
    def __init__(self, bot):
        self.bot = bot

    #J√°t√©k parancsok
    @bot.slash_command(name= "ping", description="A bot pingj√©t √≠rja ki")
    async def ping(self, ctx : Interaction):
        await ctx.send(f"Pong! üèì  {self.bot.latency * 1000:.0f}ms")

    @bot.slash_command(description="P√©nz dob√°s")
    async def coinflip(self,ctx : Interaction):
        num = random.randint(1, 2)
        if num == 1:
            await ctx.send("Fej!")
        if num == 2:
            await ctx.send("√çr√°s!")

    @bot.slash_command(name = "dice", description="Dobj kock√°val. P√©ld√°ul: 1k6  azaz egy kock√°val dobsz hatszor")
    async def dice(self, ctx : Interaction, dice: str = SlashOption(description="Dobj kock√°val. P√©ld√°ul: 1k6  azaz egy kock√°val dobsz hatszor")):
        """Az elfogadott form√°tum 1k6"""
        try:
            rolls, limit = map(int, dice.split('k'))
        except Exception:
            await ctx.send('A form√°tumnak `NkN`-nek kell lennie!')
            return

        result = ', '.join(str(random.randint(1, limit)) for r in range(rolls))
        await ctx.send(result)

    @bot.slash_command(name = "rps", description="K≈ë pap√≠r oll√≥ j√°t√©k")
    async def rps(self,ctx : Interaction, hand : str = SlashOption(description="V√°lassz ezek k√∂z√ºl: ‚úåÔ∏è, ‚úã vagy ü§ú")):

        hands = ["‚úåÔ∏è","‚úã","ü§ú"]
        handExist = hand in hands
        bothand = random.choice(hands)

        if handExist:
            await ctx.send(bothand)
            if hand == bothand:    
                await ctx.send("Ez egyenl≈ë!")

            elif hand == "‚úåÔ∏è":
                if bothand == "ü§ú":
                    await ctx.send("√ân nyertem!")
                if bothand == "‚úã":
                    await ctx.send("Te nyert√©l!")

            elif hand == "‚úã":
                if bothand == "‚úåÔ∏è":
                    await ctx.send("√ân nyertem!")
                if bothand == "ü§ú":
                     await ctx.send("Te nyert√©l")        

            elif hand == "ü§ú":
                if bothand == "‚úã":
                    await ctx.send("√ân nyertem!")
                if bothand == "‚úåÔ∏è":
                    await ctx.send("Te nyert√©l!") 

        else: 
            await ctx.send("K√©rlek j√°tsz helyesen")

    @bot.slash_command(name ="help", description="A bot parancsait mutatja meg")
    async def help(self,ctx : Interaction):

        #J√°t√©k parancsok
        MyEmbed = nextcord.Embed(title = "J√°t√©k parancsok", description = "Itt vannak a bot j√°t√©kai!", color = nextcord.Colour.orange())
        MyEmbed.set_thumbnail(url = "https://i.pinimg.com/originals/40/b4/69/40b469afa11db730d3b9ffd57e9a3af9.jpg")
        MyEmbed.add_field(name = "/ping", value = "A bot ezzel fog v√°laszolni: Pong!", inline = False)
        MyEmbed.add_field(name = "/dice", value = "Ezzel a paranccsal tudsz dob√≥kock√°val dobni.", inline = False)
        MyEmbed.add_field(name = "/coinflip", value = "This command lets you flip a coin", inline = False)
        MyEmbed.add_field(name = "/rps ‚úåÔ∏è/ü§ú/‚úã", value = "Ezzel a paranccsal tudsz k≈ë pap√≠r oll√≥t j√°tszani a bottal", inline = False)
        
        #Zene parancsok
        MusicEmbed = nextcord.Embed(title = "Zene prancsok", description = "Itt vannak a bot zene parancsai.", color = nextcord.Colour.orange())
        MusicEmbed.set_thumbnail(url = "https://i.pinimg.com/originals/40/b4/69/40b469afa11db730d3b9ffd57e9a3af9.jpg")
        MusicEmbed.add_field(name = "/join", value = "Ezzel a paranccsal fog a bot bel√©pni abba a szob√°ba amelyikben vagy! ", inline = False)
        MusicEmbed.add_field(name = "/play", value = "Ezzel a paranccsal fogsz tudni zen√©t lej√°tszani! ", inline = False)
        MusicEmbed.add_field(name = "/skip", value = "Ezzel a paranccsal nyomod tov√°bb a zen√©t!", inline = False)
        MusicEmbed.add_field(name = "/pause", value = "Ez meg√°ll√≠tja az √©ppen j√°tszott zen√©t!", inline = False)
        MusicEmbed.add_field(name = "/resume", value = "Folyat√≥dik a zene!", inline = False)
        MusicEmbed.add_field(name = "/stop", value = "Meg√°ll√≠tja a jelenlegi zen√©t!", inline = False)
        MusicEmbed.add_field(name = "/queue", value = "Ezzel a paranccsal meg tudod n√©zni milyen zen√©k vannak a lej√°tsz√°si list√°n, ha t√∂bb zen√©t is lej√°tszik!", inline = False)
        
        #Moder√°ci√≥s parancsok
        ModEmbed = nextcord.Embed(title = "Moder√°ci√≥s parancsok", description = "Ezek a bot moder√°ci√≥s parancsai", color = nextcord.Colour.orange())
        ModEmbed.set_thumbnail(url = "https://i.pinimg.com/originals/40/b4/69/40b469afa11db730d3b9ffd57e9a3af9.jpg")
        #ModEmbed.add_field(name = "/servername", value = "Edits the server name!", inline = False)
        #ModEmbed.add_field(name = "/region", value = "Edits the server Region!", inline = False)
        ModEmbed.add_field(name = "/createrole", value = "Egy rangot fog k√©sz√≠teni!", inline = False)
        ModEmbed.add_field(name = "/createtextchannel √©s /createvoicechannel", value = "K√©sz√≠t egy sz√∂veges/hangcsatorn√°t!", inline = False)
        ModEmbed.add_field(name = "/ban @felhaszn√°l√≥", value = "Kit√≠ltja a felhaszn√°l√≥t a szerverr≈ël!", inline = False)
        ModEmbed.add_field(name = "/kick @felhaszn√°l√≥", value = "Kir√∫gja az adott felhaszn√°l√≥t a szerverrr≈ël!", inline = False)
        ModEmbed.add_field(name = "/mute @felhaszn√°l√≥", value = "N√©m√≠tja a felhaszn√°l√≥t!", inline = False)
        ModEmbed.add_field(name = "/deafen @felhaszn√°l√≥r", value = "S≈±ket√≠ti a felhaszn√°l√≥t egy hangcsatorn√°ban!", inline = False)
        ModEmbed.add_field(name = "/purge sz√°m", value = "X mennyis√©g≈± √ºzenetet fog t√∂r√∂lni!", inline = False)
        ModEmbed.add_field(name = "/unban felhaszn√°l√≥#XXXX", value = "Ezzel a paranccsal visszavonod a parancsot!", inline = False)
        ModEmbed.add_field(name = "/unmute/undeafen @felhaszn√°l√≥", value = "Unmutes/Undeafens a user in a Voice Channel!", inline = False)
        ModEmbed.add_field(name = "/voicekick @felhaszn√°l√≥", value = "Kir√∫gja a felhaszn√°l√≥t a ", inline = False)
        
        #parancsok elk√ºld√©se priv√°t √ºzenetben
        await ctx.send("N√©zd meg a priv√°t √ºzeneteid!")
        await ctx.user.create_dm()
        await ctx.user.dm_channel.send(embed = MyEmbed)
        await ctx.user.dm_channel.send(embed = MusicEmbed) 
        await ctx.user.dm_channel.send(embed = ModEmbed)   

    #Szerver k√©sz√≠t√©s√©hez val√≥ parancsok

    @bot.slash_command(name="createtextchannel", description="Egy sz√∂veges csatorn√°t k√©sz√≠t")
    @application_checks.has_permissions(manage_guild = True)
    async def createtextchannel(self,ctx : Interaction,*,input : str = SlashOption(description="Csatorna n√©v")):
        await ctx.guild.create_text_channel(name = input)
        await ctx.send(f"A sz√∂veges csatorna elk√©sz√≠tve, {input}")

    @bot.slash_command(name="createvoicechannel", description="Egy hangcsatorn√°t k√©sz√≠t")
    @application_checks.has_permissions(manage_guild = True)
    async def createvoicechannel(self,ctx : Interaction,*,input : str = SlashOption(description="Csatorna n√©v")):
        await ctx.guild.create_voice_channel(name = input)
        await ctx.send(f"A sz√∂veges csatorna elk√©sz√≠tve, {input}")

    @bot.slash_command(name="createrole", description="Egy rangot k√©sz√≠t")
    @application_checks.has_permissions(manage_guild = True)
    async def createrole(self,ctx : Interaction,*,input : str = SlashOption(description="Rang n√©v")):
        await ctx.guild.create_role(name = input)
        await ctx.send(f"A rang elk√©sz√≠tve, {input}")

    #----------------------------------------------//----------------------------------------------#
    #Moder√°ci√≥s parancsok  

    @bot.slash_command(name="kick", description="Kir√∫g egy felhaszn√°l√≥t")
    @application_checks.has_permissions(kick_members = True)
    async def kick(self,ctx : Interaction, member : nextcord.Member, *, reason = SlashOption(description="A kir√∫g√°s indoka")):
        await ctx.guild.kick(member, reason = reason)
        await ctx.send(f"{member}, sikeresen kir√∫gva ezzel az indokkal: {reason}.")

    @bot.slash_command(name="ban", description="Kit√≠lt egy felhaszn√°l√≥t")
    @application_checks.has_permissions(ban_members = True)
    async def ban(self,ctx : Interaction, member : nextcord.Member, *, reason = SlashOption(description="A kit√≠lt√°s indoka")):
        await ctx.guild.ban(member, reason = reason)
        await ctx.send(f"{member} sikeresen kit√≠ltva ezzel az indokkal: {reason}.")

    @bot.slash_command(name="unban", description="Feloldja a kit√≠lt√°st")
    @application_checks.has_permissions(ban_members = True)
    async def unban(self,ctx : Interaction, *,input : str = SlashOption(description="Felhaszn√°l√≥#XXXX")):
        name, discriminator = input.split("#")
        banned_members = await ctx.guild.bans()
        for bannedmember in banned_members:
            username = bannedmember.user.name
            disc = bannedmember.user.discriminator
            if name == username and discriminator == disc:
                await ctx.guild.unban(bannedmember.user)
                await ctx.send(f"A felhaszn√°l√≥, {username}#{disc} sikeresen feloldva.")
                
    @bot.slash_command(name="purge", description="X mennyis√©g≈± √ºzenetet t√∂r√∂l ki.")
    @application_checks.has_permissions(manage_messages = True)
    async def purge(self,ctx : Interaction, amount = SlashOption(description="√ºzenetmennyis√©g"), day : int = None , month : int = None, year : int = datetime.now().year):
        if amount == "/":
            if day == None or month == None:
                return
            else:
                await ctx.channel.purge(after = datetime(year, month, day))
                await ctx.send(f"T√∂r√∂lted az √∂sszes √ºzenetet, {day}/{month}/{year}")
        else:
            await ctx.channel.purge(limit = int(amount) + 1)
            await ctx.send(f"Kit√∂r√∂lt√©l {amount} √ºzenetet.")

    @bot.slash_command(name="mute", description="Len√©m√≠tja a felhaszn√°l√≥t")
    @application_checks.has_permissions(mute_members = True)
    async def mute(self, ctx : Interaction, user : nextcord.Member = SlashOption(description="Felhaszn√°l√≥ len√©m√≠t√°sa")):
        await user.edit(mute = True)
        await ctx.send(f"Muted {user}")

    @bot.slash_command(name="unmute", description="Feloldja a felhaszn√°l√≥t a n√©m√≠t√°s al√≥l.")
    @application_checks.has_permissions(mute_members = True)
    async def unmute(self,ctx : Interaction, user : nextcord.Member = SlashOption(description="Feloldja a felhaszn√°l√≥t a n√©m√≠t√°s al√≥l.")):
        await user.edit(mute = False)
        await ctx.send(f"A felhaszn√°l√≥ sikeresen feloldva a n√©m√≠t√°s al√≥l, {user}.")

    @bot.slash_command(name="deafen", description="S√ºket√≠ti a felhaszn√°l√≥t.")
    @application_checks.has_permissions(deafen_members = True)
    async def deafen(self,ctx : Interaction, user : nextcord.Member = SlashOption(description="S√ºket√≠ti a felhaszn√°l√≥t.")):
        await user.edit(deafen = True)
        await ctx.send(f"A felhaszn√°l√≥ sikeresen s≈±ket√≠tve, {user}.")

    @bot.slash_command(name="undeafen", description="Feloldja a s√ºket√≠t√©s al√≥l a felhaszn√°l√≥t.")
    @application_checks.has_permissions(deafen_members = True)
    async def undeafen(self,ctx : Interaction, user : nextcord.Member = SlashOption(description="Feloldja a s√ºket√≠t√©s al√≥l a felhaszn√°l√≥t.")):
        await user.edit(deafen = False)
        await ctx.send(f"Undeafened {user}")

    @bot.slash_command(name="voicekick", description="Kir√∫gja a felhaszn√°l√≥t a hangcsatorn√°b√≥l.")
    @application_checks.has_permissions(kick_members = True)
    async def voicekick(self,ctx : Interaction, user : nextcord.Member = SlashOption(description="Kir√∫gja a felhaszn√°l√≥t a hangcsatorn√°b√≥l.")):
        await user.edit(voice_channel = None)
        await ctx.send(f"{user} kir√∫gva a hangcsatorn√°b√≥l.")

    #----------------------------------------------//----------------------------------------------#
    #Hiba √ºzenetek

    #J√°t√©k parancsok 
    @rps.error
    async def errorhandler(self, ctx : Interaction, error):
        if isinstance(error, commands.MissingRequiredArgument):
            await ctx.send("K√©rlek v√°lassz ‚úåÔ∏è/ü§ú/‚úã")

    #Moder√°ci√≥s parancsok

    @createtextchannel.error
    async def errorhandler(self, ctx : Interaction, error):
        if isinstance(error, commands.MissingPermissions):
            await ctx.send("Nincs el√©g jogosults√°god hozz√°!")
        if isinstance(error, commands.MissingRequiredArgument):
            await ctx.send("K√©rlek adj√°l meg egy csatorn√°t!")

    @createvoicechannel.error
    async def errorhandler(self, ctx : Interaction, error):
        if isinstance(error, commands.MissingPermissions):
            await ctx.send("Nincs el√©g jogosults√°god hozz√°!")
        if isinstance(error, commands.MissingRequiredArgument):
            await ctx.send("K√©rlek adj√°l meg egy csatorn√°t!")

    @kick.error
    async def errorhandler(self,ctx : Interaction, error):
        if isinstance(error, commands.MissingPermissions):
            await ctx.send("Nincs el√©g jogosults√°god hozz√°!")
        if isinstance(error, commands.MemberNotFound):
            await ctx.send("K√©rlek jel√∂lj meg egy felhaszn√°l√≥t!")
        if isinstance(error, commands.MissingRequiredArgument):
            await ctx.send("A parancs haszn√°lat√°hoz meg kell eml√≠tenie egy felhaszn√°l√≥t!")

    @ban.error
    async def errorhandler(self,ctx : Interaction, error):
        if isinstance(error, commands.MissingPermissions):
            await ctx.send("Nincs el√©g jogosults√°god hozz√°!")
        if isinstance(error, commands.MemberNotFound):
            await ctx.send("K√©rlek jel√∂lj meg egy felhaszn√°l√≥t!")
        if isinstance(error, commands.MissingRequiredArgument):
            await ctx.send("A parancs haszn√°lat√°hoz meg kell eml√≠tenie egy felhaszn√°l√≥t!")

    @purge.error
    async def errorhandler(self,ctx : Interaction, error):
        if isinstance(error, commands.MissingRequiredArgument):
            await ctx.send("meg kell adnia egy d√°tumot vagy egy √ºzenetsz√°mot!")
        if isinstance(error, commands.CommandInvokeError):
            await ctx.send("Csak egy / vagy egy sz√°mot lehet 1. be√≠rni.")

        
def setup(bot):
    bot.add_cog(CommandHandler(bot))